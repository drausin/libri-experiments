version: 2
jobs:
  build:
    working_directory: /go/src/github.com/drausin/libri-experiments
    docker:
      - image: daedalus2718/libri-build
    parallelism: 1
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-vendor-{{ arch }}-{{ checksum "Gopkg.lock" }}-rdb5.8
      - run:
          name: Install dependencies
          command: make get-deps
      - run:
          name: Install RocksDB
          command: |
            # hack to make sure RocksDB runs on CircleCI machines
            if [[ $(md5sum /usr/local/lib/librocksdb.a | awk '{print $1}') != "b27ba30f8c681a7ca1f7920d34045554" ]]; then
              ./build/install-rocksdb.sh
            fi
      - run:
          name: Install gorocksdb
          command: ./build/install-gorocksdb.sh
      - save_cache:
          key: v1-vendor-{{ arch }}-{{ checksum "Gopkg.lock" }}-rdb5.8
          paths:
            - vendor
            - /usr/local/lib/librocksdb.a
      - run:
          name: Build
          command: |
            if [[ ${CIRCLE_NODE_INDEX} -eq 0 ]]; then
              make build          # ensure everything builds ok
              make build-static   # build linux binary for Docker image
              make docker-image   # ensure Docker image builds ok, even though only used on deployment
            fi
      - store_artifacts:
          path: deploy/bin
      - run:
          name: Test
          command: make test
      - run:
          name: Lint
          command: make lint
      - deploy:
          name: Publish docker image
          command: |
            LIBRI_EXP_IMAGE="daedalus2718/libri-exp"
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
            if [[ "${CIRCLE_BRANCH}" == "master" ]]; then
              LIBRI_EXP_VERSION=$(./deploy/bin/libri-exp version)
              docker tag "${LIBRI_EXP_IMAGE}:snapshot" "${LIBRI_EXP_IMAGE}:${LIBRI_EXP_VERSION}"
              docker tag "${LIBRI_EXP_IMAGE}:snapshot" "${LIBRI_EXP_IMAGE}:latest"
              docker push "${LIBRI_EXP_IMAGE}:${LIBRI_EXP_VERSION}"
              docker push "${LIBRI_EXP_IMAGE}:latest"
            elif [[ "${CIRCLE_BRANCH}" == "develop" ]]; then
              docker push "${LIBRI_EXP_IMAGE}:snapshot"
            fi
